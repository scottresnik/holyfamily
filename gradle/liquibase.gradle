import org.gradle.internal.os.OperatingSystem

configurations {
    confLiquibase
}

dependencies {
    confLiquibase "org.liquibase.ext:liquibase-hibernate5"
}

if (OperatingSystem.current().isWindows()) {
    task pathingLiquibaseJar(type: Jar) {
        dependsOn configurations.confLiquibase
        appendix = 'pathingLiquibase'

        doFirst {
            manifest {
                attributes 'Class-Path':
                    sourceSets.main.runtimeClasspath.plus(configurations.confLiquibase)
                    .collect {
                        it.toURL().toString().replaceFirst(/file:\/+/, '/')
                    }.join(' ')
            }
        }
    }
}

liquibase {
    activities {
        bootstrap {
            changeLogFile 'src/main/resources/config/liquibase/bootstrap.xml'
            changeLogParameters(
                [
                    jdbcUser    : project.ext.holyFamilyJdbcUser,
                    jdbcPassword: project.ext.holyFamilyJdbcPassword
                ])
            url project.ext.holyFamilyBootstrapJdbcUrl
            username project.ext.holyFamilyBootstrapJdbcUser
            password project.ext.holyFamilyBootstrapJdbcPassword
        }
    }
    runList = project.ext.liquibaseRunList
}

task initPaths(dependsOn: compileJava) {
    group = "liquibase"
    if (OperatingSystem.current().isWindows()) {
        dependsOn pathingLiquibaseJar
	}
}

def liquibaseCommand(command) {
    javaexec {
        if (OperatingSystem.current().isWindows()) {
            classpath files(pathingLiquibaseJar.archivePath)
        } else {
            classpath sourceSets.main.runtimeClasspath
            classpath configurations.confLiquibase
        }
        main = "liquibase.integration.commandline.Main"

        args "--changeLogFile=src/main/resources/config/liquibase/changelog/" + buildTimestamp() +"_changelog.xml"
        args "--referenceUrl=hibernate:spring:org.holyfamily.domain?dialect=org.hibernate.dialect.PostgreSQL82Dialect&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy"
        args "--username=holyfamily"
        args "--password="
        args "--url=jdbc:postgresql://localhost:5432/holyfamily"
        args "--driver=org.postgresql.Driver"
        args command
    }
}

task cleanupLiquibaseCommand {
    group = 'liquibase'
    doFirst {
        project.ext['liquibaseCommandValue'] = null
    }
    mustRunAfter liquibaseRollback
}

task cleanDb {
    group = 'liquibase'
    doFirst {
        project.ext.liquibaseRunList = 'bootstrap'
        project.ext.liquibaseCommandValue = project.ext.liquibaseInitialTag
    }
    finalizedBy liquibaseRollback, cleanupLiquibaseCommand
}

def buildTimestamp() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}
